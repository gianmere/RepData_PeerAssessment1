mean(as.numeric(gsub(",","",data$V5)),na.rm = T)
str(data)
grep("^United", data$V4)
data$V4
grep("^United", data$V4)
grepl("^United", data$V4)
grep("^United", data$V4, value = T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "data.csv", method = "curl")
data <- fread("data.csv",skip = 5, nrow = 190, header = FALSE)
countries <- fread("data.csv",skip = 5, nrow = 190, header = FALSE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","educational.csv", method = "curl")
educational <- read.csv("educational.csv")
countries
mergedData <- merge(countries, educational, by.x = V1, by.y = CountryCode,all = TRUE)
mergedData <- merge(countries, educational, by.x = "V1", by.y = CountryCode,all = TRUE)
mergedData <- merge(countries, educational, by.x = "V1", by.y = "CountryCode",all = TRUE)
mergedData
summary(mergedData)
str(mergedData)
mergedData$Special.Notes
notes <- mergedData$Special.Notes
notes
grep("Fiscal year end:",notes)
grep("Fiscal year end:",notes, value = T)
fiscal.years <- grep("Fiscal year end:",notes, value = T)
grep([Jj]une, fiscal.years)
grep("[Jj]une", fiscal.years)
grep("[Jj]une", fiscal.years, value = T)
grep("[Jj]une", fiscal.years)
index <- grep("[Jj]une", fiscal.years)
mergedData[index,]
library(quantmode)
library(quantmod)
install.packages("quantmod",dependencies = T)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
library(lubridate)
class(sampleTimes)
year(sampleTimes)
year(sampleTimes) == 2012
sum(year(sampleTimes) == 2012)
week(sampleTimes)
now()
wday(now)
wday(now())
way(sampleTimes)
wday(sampleTimes)
wday(sampleTimes) == 2
sum(wday(sampleTimes) == 2)
year(sampleTimes) == 2012
2012 <- year(sampleTimes) == 2012
two <- year(sampleTimes) == 2012
sampleTimes[two,]
sampleTimes[,two]
sampleTimes[1,]
sampleTimes[two]
wday(sampleTimes[two])
wday(sampleTimes[two]) == 2
sum(wday(sampleTimes[two]) == 2)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", "Dataset.zip", method = "curl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
swirl()
head()
head(pollution)
dim(pollution)
summary(pollution$pm25)
summary(ppm)
quantile(ppm)
boxplot(ppm,col = "blue")
abline(12)
abline(h=12)
hist(ppm, col="green")
rug(ppm)
rug(low)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v = 12 lwd = 2)
abline(v = 12, lwd = 2)
abline(v=median(ppm), col="magenta", lwd=4)
summary(ppm)
names(ppm)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg)
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25 ~ region, data = pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east = subset(pollution, region="east")
east <- subset(pollution, region="east")
east <- subset(pollution, region=="east")
east
head(east)
hist(east$pm25, col="grean")
hist(east$pm25, col="green")
hist(subset(pollution, region=="west"), col="green")
hist(subset(pollution, region=="west")[pm25], col="green")
hist(subset(pollution, region=="west")$pm25, col="green")
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd=2, lty = 2)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1,2), mar = c(5,4,2,1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "west")
plot(west$latitude, west$pm25, main = "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
library(swirl)
swirl()
?Devices
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file ="geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, state, c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
swirl()
library(swirl)
swirl()
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
boxplot(airquality$Month)
table(airquality$Month)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb), col.axis="blue", col.lab = "red")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis="blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone set = "n")
plot(airquality$Wind, airquality$Ozone, set = "n")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, month == 5)
may <- subset(airquality, airquality.month == 5)
may <- subset(airquality, airquality$Month == 5)
may <- subset(airquality, $Month == 5)
may <- subset(airquality, Month == 5)
?pch
plot(may$Wind, pch = 2, color = "blue")
plot(may$Wind, pch = 17, col= "blue")
points(may$Wind, pch = 17, col= "blue")
points(may$Wind, may$Ozone, pch = 17, col= "blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind,notmay$Ozone,col="red",pch=11)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", pch = c(17,8), col = c("blue", "red"), legend=c("May", "Other Months"))
abline(v = median(airquality$Wind), lty=2, widt = 2)
abline(v = median(airquality$Wind), lty=2, lwdt = 2)
abline(v = median(airquality$Wind), lty=2, lwd=2)
mfrow = C(1,2)
mfrow = c(1,2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4, 4, 2, 1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind, airquality)
xyplot(Ozone ~ Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch = 8, col = "red", main = "Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, airquality, layout = c(5,1))
p <- xyplot(Ozone ~ Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y ~ x | f, c(2,1))
xyplot(y ~ x | f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit(myLabel.R)
myedit("myLabel.R")
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price ~ carat | color * cut, data = diamonds, strip = FALSE, pch = 20, xlab = "myxlab", ylab = "myylab", main = "mymain")
xyplot(price ~ carat | color * cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~ carat | color * cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(),10)
pal <- colorRamp(c("red", "blue"))
pall(0)
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xCC
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x,y,pch = 19, rgb(0,.5,.5))
plot(x,y,pch = 19, col = c(0,.5,.5))
plot(x,y,pch = 19, col = rgb(0,.5,.5))
plot(x,y,pch = 19, col = rgb(0,.5,.5, .3))
cols <- brewer.pal(3m, "BuGn")
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
str(mpg)
qplot(displ, hwy, mpg)
qplot("displ", "hwy", mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv)
g <- ggplot(mpg, aes(displ, hwy))
g
summery(g)
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(. ~ drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(. ~ drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, aes(color=drv))
g+geom_point(size=4, alpha=1/2, aes(color=drv)) + labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(size=4, alpha=1/2, aes(color=drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(aes(color=drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(size=2, alpha=1/2, aes(color=drv)) + geom_smooth(size = 4m linetype = 3, method = "lm")
g+geom_point(size=2, alpha=1/2, aes(color=drv)) + geom_smooth(size = 4m, linetype = 3, method = "lm")
g+geom_point(size=2, alpha=1/2, aes(color=drv)) + geom_smooth(size = 4, linetype = 3, method = "lm")
g+geom_point(size=2, alpha=1/2, aes(color=drv)) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g+geom_point(aes(color=drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type="l",ylim=c(-3,3))
g <- ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(-3,3)
g+geom_line()+coord_cartesian(c(-3,3))
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(testdat, aes(x=displ, y=hwy, color=factor(year)))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE)
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill=cut)
qplot(price, data = diamonds, geometry = "density")
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut
)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth = "lm")
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method="lm")
qplot(carat, price, data = diamonds, color = cut, facets = . ~ cut) + geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth,price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method="lm", size=3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(. ~ cut)
exit
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(lattice)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(votes, rating, data = movies)
library(datasets)
qplot(votes, rating, data = movies)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month)) + stats_smooth("loess")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month)) +  geom_smooth()
library(swirl)
swirl()
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(c(1:6))
mdist <- dist(sub1[,1:3])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[10:12])
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562,563)],centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562,563)],centers = 6, nstart = 6)
kClust <- kmeans(sub1[, -c(562,563)],centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcoll])
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
nagative <- x1 < 0
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%d%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
str(dates)
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(cnt0, cnt0$county.site, nrow)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(median(x0sub, na.rm = TRUE), lwd = 2)
abline(median(x0sub, na.rm = TRUE), lwd = 2)
ablin
median(x0sub, na.rm = TRUE)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub,x1sub,na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, Sate.Code, mean na.rm = TRUE))
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean na.rm = TRUE))
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0,d1,by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segment(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
setwd("~/DatascienceRExercise/RepData_PeerAssessment1")
list.dirs()
list.files()
?read.cvs
?read.csv
read.csv("activity.zip")
unzip("activity.zip")
dir()
df <- read.csv("activity.csv")
str(dt)
str(df)
head(df)
head(df, n = 50)
str(df)
df$date <- as.Date(df$date)
str(df)
unzip("activity.zip")
complete.cases(df$steps)
good <- complete.cases(df$steps)
df <- df[good, ]
head(df)
?aggregate
?list
list(df$date)
aggregate(df$steps,list(df$date), sum)
aggregate(df$steps, day =list(df$date), sum)
aggregate(df$steps, day <- list(df$date), sum)
?aggregate
aggregate(df$steps, df$date, sum)
aggregate(df$steps, list(day = df$date), sum)
aggregate(list(sum = df$steps), list(day = df$date), sum)
steps <- aggregate(df$steps, list(day = df$date), sum)
hist(steps)
?hist
hist(steps$day, steps$x)
hist(steps$day)
hist(, steps$x, steps$day)
hist(steps$x)
