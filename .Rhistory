par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone set = "n")
plot(airquality$Wind, airquality$Ozone, set = "n")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, month == 5)
may <- subset(airquality, airquality.month == 5)
may <- subset(airquality, airquality$Month == 5)
may <- subset(airquality, $Month == 5)
may <- subset(airquality, Month == 5)
?pch
plot(may$Wind, pch = 2, color = "blue")
plot(may$Wind, pch = 17, col= "blue")
points(may$Wind, pch = 17, col= "blue")
points(may$Wind, may$Ozone, pch = 17, col= "blue")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind,notmay$Ozone,col="red",pch=11)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", pch = c(17,8), col = c("blue", "red"), legend=c("May", "Other Months"))
abline(v = median(airquality$Wind), lty=2, widt = 2)
abline(v = median(airquality$Wind), lty=2, lwdt = 2)
abline(v = median(airquality$Wind), lty=2, lwd=2)
mfrow = C(1,2)
mfrow = c(1,2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4, 4, 2, 1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind, airquality)
xyplot(Ozone ~ Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch = 8, col = "red", main = "Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, airquality, layout = c(5,1))
p <- xyplot(Ozone ~ Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y ~ x | f, c(2,1))
xyplot(y ~ x | f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit(myLabel.R)
myedit("myLabel.R")
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price ~ carat | color * cut, data = diamonds, strip = FALSE, pch = 20, xlab = "myxlab", ylab = "myylab", main = "mymain")
xyplot(price ~ carat | color * cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~ carat | color * cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(),10)
pal <- colorRamp(c("red", "blue"))
pall(0)
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xCC
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x,y,pch = 19, rgb(0,.5,.5))
plot(x,y,pch = 19, col = c(0,.5,.5))
plot(x,y,pch = 19, col = rgb(0,.5,.5))
plot(x,y,pch = 19, col = rgb(0,.5,.5, .3))
cols <- brewer.pal(3m, "BuGn")
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
str(mpg)
qplot(displ, hwy, mpg)
qplot("displ", "hwy", mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv)
g <- ggplot(mpg, aes(displ, hwy))
g
summery(g)
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(. ~ drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(. ~ drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, aes(color=drv))
g+geom_point(size=4, alpha=1/2, aes(color=drv)) + labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(size=4, alpha=1/2, aes(color=drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(aes(color=drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(size=2, alpha=1/2, aes(color=drv)) + geom_smooth(size = 4m linetype = 3, method = "lm")
g+geom_point(size=2, alpha=1/2, aes(color=drv)) + geom_smooth(size = 4m, linetype = 3, method = "lm")
g+geom_point(size=2, alpha=1/2, aes(color=drv)) + geom_smooth(size = 4, linetype = 3, method = "lm")
g+geom_point(size=2, alpha=1/2, aes(color=drv)) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g+geom_point(aes(color=drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type="l",ylim=c(-3,3))
g <- ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(-3,3)
g+geom_line()+coord_cartesian(c(-3,3))
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(testdat, aes(x=displ, y=hwy, color=factor(year)))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE)
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill=cut)
qplot(price, data = diamonds, geometry = "density")
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut
)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth = "lm")
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method="lm")
qplot(carat, price, data = diamonds, color = cut, facets = . ~ cut) + geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth,price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method="lm", size=3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(. ~ cut)
exit
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(lattice)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(votes, rating, data = movies)
library(datasets)
qplot(votes, rating, data = movies)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month)) + stats_smooth("loess")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month)) +  geom_smooth()
library(swirl)
swirl()
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(c(1:6))
mdist <- dist(sub1[,1:3])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[10:12])
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562,563)],centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562,563)],centers = 6, nstart = 6)
kClust <- kmeans(sub1[, -c(562,563)],centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcoll])
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
nagative <- x1 < 0
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%d%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
str(dates)
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(cnt0, cnt0$county.site, nrow)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(median(x0sub, na.rm = TRUE), lwd = 2)
abline(median(x0sub, na.rm = TRUE), lwd = 2)
ablin
median(x0sub, na.rm = TRUE)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub,x1sub,na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, Sate.Code, mean na.rm = TRUE))
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean na.rm = TRUE))
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0,d1,by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segment(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
setwd("~/DatascienceRExercise/RepData_PeerAssessment1")
if (!exists("activity.csv")) {
unzip("activity.zip")
}
activities <- read.csv("activity.csv")
activities$date = as.Date(activities$date)
good <- complete.cases(activities$steps)
activities <- activities[good, ]
aggregate(df$steps, list(day = df$date), sum)
aggregate(activities$steps, list(day = activities$date), sum)
aggregate(activities$steps, list(day = activities$date))
?aggregate
aggregate(activities$steps, list(day = activities$date), sum, simplify = TRUE)
steps <- aggregate(activities$steps, list(day = activities$date), sum, simplify = TRUE)
values <- steps$x
steps$day
names(values) <- step$day
names(values) <- steps$day
values
hist(values)
dates <- seq(as.Date("2011-10-01"), length.out=60, by="+1 day")
dates
set.seed(1)
dat <- data.frame(
suburb <- rep(LETTERS[24:26], times=c(100, 200, 300)),
Date_of_Onset <- c(
sample(dates-30, 100, replace=TRUE),
sample(dates,    200, replace=TRUE),
sample(dates+30, 300, replace=TRUE)
)
)
dat
str(dat)
ggplot(dat, aes(x=Date_of_Onset, fill=suburb)) +
stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month"))
library(ggplot2)
ggplot(dat, aes(x=Date_of_Onset, fill=suburb)) +
stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month"))
library(scales)
ggplot(dat, aes(x=Date_of_Onset, fill=suburb)) +
stat_bin(binwidth=1, position="identity") +
scale_x_date(breaks=date_breaks(width="1 month"))
ggplot(steps, aes(x=day, fill=x))
ggplot(steps, aes(x=day, fill=x)) + stat_bin(position="identity")
ggplot(steps, aes(x=day, fill=x)) + stat_bin(binwidth=1,position="identity")
ggplot(steps, aes(x=day, fill=x)) + stat_bin(binwidth=1)
?stat_bin
ggplot(steps, aes(x=day, fill=x, weight=x)) + stat_bin(binwidth=1)
ggplot(steps, aes(x=day, weight=x)) + stat_bin(binwidth=1)
head(steps)
?aes
ggplot(steps, aes(x=day, fill=x)) + geom_histogram(binwidth=1)
ggplot(steps, aes(x=day, weight=x)) + geom_histogram(binwidth=1)
tail(steps)
tail(activities$)
ggplot(activities, aes(x=date, weight=steps)) + geom_histogram(binwidth=1)
ggplot(activities, aes(x=date, weight=steps)) + geom_histogram(binwidth=1) + labs(x = "Date", y = "Number of steps")
ggplot(activities, aes(x=date, weight=steps, color="blue")) + geom_histogram(binwidth=1) + labs(x = "Date", y = "Number of steps")
ggplot(activities, aes(x=date, weight=steps)) + geom_histogram(binwidth=1) + labs(x = "Date", y = "Number of steps")
ggplot(activities, aes(x=date, weight=steps)) + geom_histogram(binwidth=1) + labs(x = "Date", y = "Number of steps") + theme_bw(base_family = "Times”)
)
a
ggplot(activities, aes(x=date, weight=steps)) + geom_histogram(binwidth=1) + labs(x = "Date", y = "Number of steps")
?aggregate
aggregate(activities$steps, as.list(activities$date),mean)
aggregate(activities, as.list(activities$date),mean)
aggregate(activities$steps, list(activities$date),mean)
summary(activities$steps)
activities$steps
activities
activities <- read.csv("activity.csv")
activities$date = as.Date(activities$date)
aggregate(activities$steps, list(activities$date),mean)
aggregate(activities$steps, list(activities$date),mean)
mean <- aggregate(activities$steps, list(activities$date),mean)
plot(mean$Group.1, mean$x)
plot(mean$Group.1, mean$x, type = "l")
plot(mean$Group.1, mean$x)
?plot
plot(mean$Group.1, mean$x, type = "l")
plot(mean$Group.1, mean$x)
axis(1, mean$Group.1, format(dm$Date, "%b %d"), cex.axis = .7)
axis(1, mean$Group.1, format(mean$Date, "%b %d"), cex.axis = .7)
plot(mean$Group.1, mean$x, width = 800)
plot(mean$Group.1, mean$x)
plot(mean$Group.1, mean$x)
xyplot(mean$Group.1, mean$x)
plot(mean$Group.1, mean$x)
plot(mean$Group.1, mean$x, main = "Mean number of steps for day", xlab = "Day", ylab = "Number of steps")
median <- aggregate(activities$steps, list(activities$date),median)
plot(median$Group.1, median$x, main = "Median number of steps for day", xlab = "Day", ylab = "Number of steps")
median
median <- aggregate(activities$steps, list(activities$date),median)
?aggragate
?aggregate
median <- aggregate(activities$steps, list(activities$date),median, na.rm=TRUE)
median
library(dplyr)
goodActivities
good <- complete.cases(activities$steps)
goodActivities <- activities[good, ]
goodActivities
goodActivities %>% group_by(date) %>% summarize(Mean=mean(value),Median=median(value))
goodActivities %>% group_by(date) %>% summarize(Mean=mean(steps),Median=median(steps))
histData <- aggregate(steps ~ date, data = goodActivities, sum)
histData
h <- hist(histData$steps,  # Save histogram as object
breaks = 11,  # "Suggests" 11 bins
freq = T,
col = "thistle1",
main = "Histogram of Activity",
xlab = "Number of daily steps")
sum <- aggregate(activities$steps, list(activities$date), sum)
sum
sum <- aggregate(list(step = activities$steps) , list(day = activities$date), sum)
sum
mean(sum$step)
?mean
mean(sum$step , na.rm = T)
median(sum$step , na.rm = T)
summary(sum$step)
options(digits=12)
summary(sum$step)
goodActivities
goodActivities %>% group_by(interval) %>% summarise(Median = median(steps)
)
goodActivities %>% group_by(interval) %>% summarise(Mean = mean(steps)
)
goodActivities %>% group_by(interval) %>% summarise(Mean = mean(steps))
interval_mean <- goodActivities %>% group_by(interval) %>% summarise(Mean = mean(steps))
?plot
plot(interval_mean$interval, interval_mean$Mean, type="l")
which.max(interval_mean$Mean)
interval_mean[104,]
tail(interval_mean)
interval_mean[c(103,104),]
plot(interval_mean$interval, interval_mean$Mean, type="l", xlab="5-minute interval", ylab = "average number of steps taken, averaged across all days ")
plot(interval_mean$interval, interval_mean$Mean, type="l", xlab="5-minute interval", ylab = "average number of steps (across all days)")
sum(is.na(activities$steps))
is.na(activities$steps)
which(is.na(activities$steps))
is.na(activities$steps)
sum(is.na(activities$steps))
activities
interval_mean
mutate <- mutate(activities, Mean = filter(interval_mean, interval = activities$interval)$Mean)
mutate <- mutate(activities, Mean = filter(interval_mean, interval == activities$interval)$Mean)
mutate <- mutate(activities, Mean = filter(interval_mean, interval == activities$interval)$Mean)
which(is.na(dataset1), arr.ind=TRUE)
which(is.na(activities), arr.ind=TRUE)
na_index <- which(is.na(activities$steps), arr.ind=TRUE)
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
length(na_index)
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
interval_mean
select(interval_mean, interval = 5)
select(interval_mean, interval == 5)
filter(interval_mean, interval = 5)
filter(interval_mean, interval == 5)
filter(interval_mean, interval == 5)$Mean
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
source('~/DatascienceRExercise/RepData_PeerAssessment1/script.R')
?wday
??wday
?plot
class(activities)
dir
dir()
knit2html("PA1_template.Rmd")
library(knitr)
knit2html("PA1_template.Rmd")
